FROM centos:6

ENV container docker

RUN set -e && \
  yum clean all && \
  yum install -y sudo openssh-server openssh-clients which curl epel-release && \
  # Fix SNI issues.
  yum install -y python-pip gcc python-devel libffi-devel openssl-devel && \
  pip install -U 'pip<10' && \
  pip install -U 'setuptools<45' && \
  pip install -U idna==2.7 urllib3==1.23 pyOpenSSL==17.5.0 ndg-httpsclient==0.5.0 pyasn1==0.4.8 && \
  [ -f "/etc/ssh/ssh_host_rsa_key" ] || ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N '' && \
  [ -f "/etc/ssh/ssh_host_dsa_key" ] || ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N ''

# Adjust sshd defaults per kitchen's needs
RUN test -f /usr/libexec/openssh/sftp-server && \
  printf "Subsystem sftp /usr/libexec/openssh/sftp-server\\nUseDNS no\\nUsePAM no\\nPasswordAuthentication yes\\nUsePrivilegeSeparation no\\n" > /etc/ssh/sshd_config && \
  # Add 'kitchen' user
  if ! getent passwd <%= @username %>; then useradd -d /home/<%= @username %> -m -s /bin/bash -p '*' <%= @username %>; fi && \
  echo <%= "#{@username}:#{@password}" %> | chpasswd && \
  # Allow unlimited sudo privileges to 'kitchen' user
  echo "<%= @username %> ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && echo "Defaults !requiretty" >> /etc/sudoers && \
  # Make 'kitchen' user's ~/.ssh directory
  mkdir -m 0700 /home/<%= @username %>/.ssh && \
  # Make 'kitchen' user's authorized_keys file (empty)
  touch /home/<%= @username %>/.ssh/authorized_keys && \
  # Secure 'kitchen' user's authorized_keys file
  chmod 0600 /home/<%= @username %>/.ssh/authorized_keys && \
  # Fix 'kitchen' user's SSH directory permissions
  chown -R <%= @username %>:<%= @username %> /home/<%= @username %>/.ssh && \
  echo '<%= IO.read(@public_key).strip %>' >> /home/<%= @username %>/.ssh/authorized_keys

# Expose SSH
EXPOSE 22
