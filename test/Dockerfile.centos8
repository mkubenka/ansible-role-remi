# https://github.com/mesaguy/docker/blob/master/boot-x86_64/Dockerfile-centos-8-latest
FROM centos:8

# Clean (purge) the repo cache
RUN dnf -y clean all && \
  # Replace broken systemd, ships with missing libsystemd-shared-239.so
  dnf -y install systemd && \
  # Update all packages
  dnf -y update && \
  # Strip down systemd
  for f in /lib/systemd/system/sysinit.target.wants/* ; do if [ "$(basename "$f")" != "systemd-tmpfiles-setup.service" ] ; then rm -f "$f" ; fi ; done && \
  rm -f /lib/systemd/system/multi-user.target.wants/* && \
  rm -f /etc/systemd/system/*.wants/* && \
  rm -f /lib/systemd/system/local-fs.target.wants/* && \
  rm -f /lib/systemd/system/sockets.target.wants/*udev* && \
  rm -f /lib/systemd/system/sockets.target.wants/*initctl* && \
  rm -f /lib/systemd/system/basic.target.wants/* && \
  rm -f /lib/systemd/system/anaconda.target.wants/* && \
  # Clean (purge) the repo cache
  dnf -y clean all && rm -rf /var/cache/dnf/* /var/cache/yum/* && \
  # Purge logs
  rm -rf /var/log/* /var/run/log/journal

# Without this, init won't start the enabled services. Starting the services
# fails with one of:
#     Failed to get D-Bus connection: Operation not permitted
#     System has not been booted with systemd as init system (PID 1). Can't operate.
#     Failed to connect to bus: No such file or directory
VOLUME [ "/sys/fs/cgroup", "/run" ]

# Clean (purge) the repo cache
RUN dnf -d1 -y clean all && \
  # Default openssh-server is missing sshd.service
  dnf -y install openssh-server sudo epel-release  && \
  # Install python3-dnf and ansible manually as kitchen-ansible does not support CentOS 8.
  dnf -y install sudo which python3-libselinux git python3-dnf ansible && \
  # Clean (purge) the repo cache
  dnf -d1 -y clean all && rm -rf /var/cache/dnf/* && \
  # Purge logs
  rm -rf /var/log/* /var/run/log/journal

# Adjust sshd defaults per kitchen's needs
RUN test -f /usr/libexec/openssh/sftp-server && \
  printf "Subsystem sftp /usr/libexec/openssh/sftp-server\\nUseDNS no\\nUsePAM no\\nPasswordAuthentication yes\\nUsePrivilegeSeparation no\\n" > /etc/ssh/sshd_config && \
  # Start SSH on boot
  systemctl enable sshd.service && \
  # Add 'kitchen' user
  if ! getent passwd <%= @username %>; then useradd -d /home/<%= @username %> -m -s /bin/bash -p '*' <%= @username %>; fi && \
  echo <%= "#{@username}:#{@password}" %> | chpasswd && \
  # Allow unlimited sudo privileges to 'kitchen' user
  echo "<%= @username %> ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && echo "Defaults !requiretty" >> /etc/sudoers && \
  # Make 'kitchen' user's ~/.ssh directory
  mkdir -m 0700 /home/<%= @username %>/.ssh && \
  # Make 'kitchen' user's authorized_keys file (empty)
  touch /home/<%= @username %>/.ssh/authorized_keys && \
  # Secure 'kitchen' user's authorized_keys file
  chmod 0600 /home/<%= @username %>/.ssh/authorized_keys && \
  # Fix 'kitchen' user's SSH directory permissions
  chown -R <%= @username %>:<%= @username %> /home/<%= @username %>/.ssh && \
  echo '<%= IO.read(@public_key).strip %>' >> /home/<%= @username %>/.ssh/authorized_keys

# Expose SSH
EXPOSE 22

# Start via systemd
CMD ["/usr/lib/systemd/systemd"]
